/*
 * This is a globally available SCSS project file.
 * It contains project specific utilities (variables, mixins, functions) that don't! output CSS by default.
 * We use it to be imported in a webpack loader to avoid having to import these in each separate file.
 *
 * This file is used next to "seng-scss" which is imported globally as well and contain the default mixins/vars/functions
 */
/**
 * Asset URL builder
 *
 * @param {String} $type - Asset type, matching folder name
 * @param {String} $file - Asset file name, including extension
 *
 * @return {URL} - A `url()` function leading to the asset
 */
/*
 * Font asset helper
 * @access public
 * @param {String} $file - Asset file name, including extension
 * @return {URL} - A `url()` function leading to the font
 * @require {function} asset
 */
/*
 * Get Font weight
 *
 * @param {String} $weight - The name of the weight you need
 *
 * @return {Number} - The CSS based font weight on the name
 */
/**
 * Z-Index function
 *
 * @param {string} $list (Array) - The list to find the current z-index in
 * @param {string} $element (String) - The name of the current element, must be in the $list
 *
 * @returns {number}
 */
/**
 * Get EM size of a value based on a base size
 *
 * @param {Number} $value - The value you need the EM value from
 * @param {Number} $base - The base value where the $value is calculated upon
 *
 * @return {EM Value} - The EM value based on $value and $base
 */
/**
 * Font Face
 *
 * @param {string} $fontName - Name of the font
 * @param {string} $folderName - Subfolder inside the fonts folder
 * @param {string} $fileName - Name of the font-file
 * @param {string} $fontWeight (normal) - Font weight value
 * @param {string} $fontStyle (normal) - Font style value
 */
/**
 * Respond To (Breakpoint)
 *
 * @param {string} $name - Name of the breakpoint used in $breakpoints
 */
/**
 * Aspect ratio, create a :before pseudo element for setting an aspect ratio on an element
 *
 * @param {number} $width (1) - Percentage width
 * @param {number} $height ($width) - Percentage height
 * @param {boolean} $relative (true) - Add relative position to element
 */
/**
 * Hover Mixin for applying :hover pseudo styles
 *
 * Add your own implementation for showing hovers
 * Example using Modernizr touch check: html.no-touch &:hover { @content; }
 * Leaving it to just :hover by default. But best practice to always use the mixin
 *
 * @param $extraSelector:string (optional) = an extra selector that can have the same styles as a hover (for mobile/active state)
 */
/**
 * Offset
 *
 * @param {number} $top (0) - Top Offset
 * @param {number} $left (0) - Left Offset
 */
/**
 * Position mixin for setting absolute position values
 *
 * The mixin can have multiple arguments providing a number
 * @param {number} $top (0) - Top Position
 * @param {number} $right ($top) - Right Position
 * @param {number} $bottom ($top) - Bottom Position
 * @param {number} $left ($right) - Left Position
 *
 * Or a map of multiple positions
 * @param {map} $args... - A map containing multiple positions (top: 1px, left: 1px)
 */
/**
 * Set pseudo elements styles that are used mostly (content, display, position)
 *
 * @param {display} $display (block)
 * @param {position} $position (absolute)
 * @param {string} $content ('')
 */
/**
 * Size an Element
 *
 * @param {number} $width (1em) - Width of the element
 * @param {number} $height ($width) - Height of the element
 */
.se01-search {
	padding: 36px 0 40px;
	background-color: #f3f4f8;
	position: relative;
}

.se01-search::after {
	content: "";
	display: block;
	position: absolute;
	height: 73px;
	width: 34px;
	left: 0;
	z-index: 1;
	background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22110%22%20height%3D%22342%22%3E%0A%20%20%3Cpath%20fill%3D%22%23F3F4F8%22%20fill-rule%3D%22evenodd%22%20d%3D%22M110.3%200l-.2.1c-17.2%200-32.4%2011-37.9%2027.2L0%20242.1V0h110.3z%22%20%2F%3E%0A%3C%2Fsvg%3E");
	top: 100%;
	background-size: cover;
}

.se01-search .row {
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	    -ms-flex-pack: center;
	        justify-content: center;
}

.se01-search__wrap {
	position: relative;
	width: 100%;
}

.se01-search__line {
	position: absolute;
	bottom: 0;
	left: 0;
	width: 0;
	height: 1px;
	background-color: #171717;
}

.se01-search__input {
	border: 0;
	border-bottom: 1px solid #c7c8cb;
	padding: 0 70px 24px 0;
	width: 100%;
	font-size: 32px;
	font-weight: 400;
	line-height: 40px;
	color: #171717;
	background-color: #f3f4f8;
	outline: none;
}

.se01-search__input::-webkit-input-placeholder {
	color: #c7c8cb !important;
}

.se01-search__input::-moz-placeholder {
	color: #c7c8cb !important;
}

.se01-search__input:-ms-input-placeholder {
	color: #c7c8cb !important;
}

.se01-search__input::-ms-input-placeholder {
	color: #c7c8cb !important;
}

.se01-search__input::placeholder {
	color: #c7c8cb !important;
}

.se01-search__input::-ms-clear {
	display: none;
}

.se01-search__placeholder {
	font-size: 32px;
	font-weight: 400;
	display: inline-block;
	position: absolute;
	top: -9999px;
}

.se01-search__error {
	position: absolute;
	left: 0;
	bottom: -85px;
	display: none;
}

.se01-search__btn {
	position: absolute;
	right: 0;
	bottom: 22px;
	height: 48px;
	width: 48px;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-pack: center;
	-webkit-justify-content: center;
	    -ms-flex-pack: center;
	        justify-content: center;
	-webkit-box-align: center;
	-webkit-align-items: center;
	    -ms-flex-align: center;
	        align-items: center;
}

.se01-search__btn::before {
	border: 0;
	top: 0;
}

.se01-search__btn .font-ico-search {
	height: 18px;
	width: 18px;
	font-size: 18px;
	color: #858587;
}

.se01-search__btn .font-ico-cross {
	-webkit-transform: translateY(0);
	        transform: translateY(0);
	top: 0;
}

.se01-search__reset-icon {
	display: none;
}

.se01-search.inputting .se01-search__reset-icon {
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-webkit-align-items: center;
	    -ms-flex-align: center;
	        align-items: center;
}

.se01-search.inputting .se01-search__search-icon {
	display: none;
}

.se01-search.no-result .se01-search__error {
	display: block;
}

@media (min-width: 768px) {
	.se01-search {
		padding: 120px 0;
	}
	.se01-search__input {
		padding-right: 90px;
		padding-bottom: 8px;
		font-size: 56px;
		line-height: 80px;
	}
	.se01-search__placeholder {
		font-size: 56px;
	}
	.se01-search__error {
		bottom: -170px;
		left: 5px;
	}
	.se01-search__btn {
		height: 56px;
		width: 56px;
		bottom: 14px;
	}
	.se01-search__btn .font-ico-search {
		height: 25px;
		width: 25px;
		font-size: 25px;
	}
}

@media (min-width: 1024px) {
	.se01-search__error {
		bottom: -220px;
		left: 5px;
	}
	.se01-search::after {
		height: 247px;
		width: 111px;
	}
}
