// To ensure we initiate the correct components on the page we have this global components object that
// holds the JS for each component on the page.
window.components = window.components || {};

var SCROLL_COMPONENT_ATTRIBUTE = 'scrollComponent';


/**
 * The ScrollTrackerComponentManager manages the visible state of a component. It triggers the transitionIn
 * on your components and it will stop looping animations once the component leaves the viewport.
 *
 * For a more detailed description please take a look at the documentation:
 * https://github.com/riccoarntz/scroll-tracker-component-manager
 *
 * @param components - The DOM elements that represent the component.
 */
function setupScrollTrackerManager(components) {
	var manager = new scrollTrackerComponentManager.ScrollTrackerComponentManager({
		setDebugLabel: false,
		debugBorderColor: 'red',
		inViewProgressEnabled: true,
		scrollThrottle: 100,
		resizeDebounce: 100,
	});

	// Add the components to the manager so they will transition in when they enter the viewport
	components.forEach(function (component) {
		// Only add components that have the data-scroll-component attribute
		if (component.element.dataset[SCROLL_COMPONENT_ATTRIBUTE] !== undefined) {
			manager.addComponentToScrollTracker(component.element.instance);
		}
	});
}


/**
 * We bootstrap the page by finding all components on the page and creating the component instance.
 */
function bootstrap() {
	// Object fit polyfills that are required for IE11
	objectFitImages();
	objectFitVideos();

	// Initiate all the components on the current page.
	var components = __initiateComponents();


	setupScrollTrackerManager(components);
}

// Bootstrap when the DOMContentLoaded is fired.
document.addEventListener('DOMContentLoaded', bootstrap);
